<Window x:Class="ManagedDoom_extension.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ManagedDoom_extension.ViewModels" 
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        d:DataContext="{d:DesignInstance Type=local:ViewModel}"
        mc:Ignorable="d"
        Title="ManagedDoom-extension" MaxHeight="1270" MaxWidth="720" Height="580" Width="340" MinHeight="480" MinWidth="320"
        x:Name="ManagedDoomWindow"
        Style="{StaticResource OldStyleWindow}"
        FontFamily="Consolas">
    <!--Background="#4c5945"
        WindowStyle="None"
        AllowsTransparency="True"
        SnapsToDevicePixels="True"
        ResizeMode="CanResizeWithGrip" FontFamily="Consolas"
        BorderThickness="1,1,1,1">-->
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="25"/>
            <RowDefinition Height="25"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="25"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="25"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="150"/>
            <RowDefinition Height="20"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="*" />
            <RowDefinition Height="50"/>
        </Grid.RowDefinitions>
        <Border BorderThickness="0" Margin="2,1,2,1" BorderBrush="Black" Grid.ColumnSpan="2" Background="#4c5945" MouseDown="Border_MouseDown">
            <Grid>
                <StackPanel HorizontalAlignment="Left" Orientation="Horizontal">
                    <Image Source="Views\media\caco.png" Width="16" Height="16" Visibility="Visible" Margin="1,0,0,0">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseUp">
                                <i:InvokeCommandAction Command="{Binding ShowAbout}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Image>
                    <Label Content="ManagedDoom-extension" Foreground="#f6f7eb" FontWeight="SemiBold" Margin="1,0,0,0" FontStyle="Normal" FontStretch="Normal"></Label>
                </StackPanel>
                <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                    <Button Width="20" Height="20" Content="_" FontSize="14" Style="{StaticResource OldStyleButton}" Foreground="#87917e" FontWeight="ExtraBold" Click="Button_Click_Minimized" Margin="0,0,1,0"/>
                    <Button Width="20" Height="20" Content="✕" FontSize="14" Style="{StaticResource OldStyleButton}" Foreground="#87917e" FontWeight="ExtraBold" Click="Button_Click_Close" Margin="1,0,0,0" />
                </StackPanel>
            </Grid>
        </Border>
        <Label Grid.Row="1" HorizontalAlignment="Center" FontSize="14" Foreground="#818b78" Content="Path to source port" />
        <Grid Grid.Row="2" Margin="10,0,10,0" HorizontalAlignment="Stretch" VerticalAlignment="Center">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*"/>
                <ColumnDefinition Width="75"/>
            </Grid.ColumnDefinitions>
            <TextBox x:Name="TextBoxPathToSource" IsReadOnly="True" Style="{StaticResource OldStyleTextBox}" Text="{Binding PathToSourcePort}" VerticalContentAlignment="Center" HorizontalContentAlignment="Left" Height="20" Margin="0,0,3,0" Width="Auto" Cursor="IBeam"/>
            <Button Grid.Column="1" Style="{StaticResource OldStyleButton}" Content="Browse" Command="{Binding CheckPathToSourcePort}" VerticalAlignment="Center" Height="25" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Stretch" />
        </Grid>
        <Label Grid.Row="3" HorizontalAlignment="Center" FontSize="14" Foreground="#818b78" Content="Path to iwad file" />
        <Grid Height="26" Margin="10,0,10,0" Grid.Row="4" VerticalAlignment="Center">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*"/>
                <ColumnDefinition Width="75"/>
            </Grid.ColumnDefinitions>
            <TextBox x:Name="TextBoxPathToWadorDeh" IsReadOnly="True" Style="{StaticResource OldStyleTextBox}" Text="{Binding PathToWadorDeh}" FontSize="11" VerticalContentAlignment="Center" HorizontalContentAlignment="Left" Height="20" MinWidth="222" Margin="0,0,3,0" VerticalAlignment="Stretch" Cursor="IBeam" />
            <Button Grid.Column="1" Style="{StaticResource OldStyleButton}" Content="Browse" Command="{Binding CheckPathToWadOrDeh}" VerticalAlignment="Center" Width="73" Height="25" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
        </Grid>
        <CheckBox x:Name="CheckIsEnabledTextBoxMod" Style="{StaticResource OldStyleCheckBox}" IsChecked="{Binding CheckBoxMod}" Command="{Binding IsChangedModStatus}" Grid.Row="5" HorizontalAlignment="Center" FontSize="14" Foreground="#818b78" Content="Path to adittional file (mod)" VerticalAlignment="Center" />
        <Grid Height="26" Margin="10,0,10,0" Grid.Row="6" VerticalAlignment="Center" IsEnabled="{Binding ElementName=CheckIsEnabledTextBoxMod, Path=IsChecked}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*"/>
                <ColumnDefinition Width="75"/>
            </Grid.ColumnDefinitions>
            <TextBox IsReadOnly="True" Style="{StaticResource OldStyleTextBox}" Text="{Binding PathToAdditionalFile}" FontSize="11" VerticalContentAlignment="Center" HorizontalContentAlignment="Left" Height="20" MinWidth="222" Margin="0,0,3,0" VerticalAlignment="Stretch" Cursor="IBeam" />
            <Button Grid.Column="1" Style="{StaticResource OldStyleButton}" Content="Browse" Command="{Binding CheckPathToAdditionalFile}" VerticalAlignment="Center" Width="73" Height="25" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
        </Grid>
        <GroupBox Style="{StaticResource OldStyleGroupBox}" Grid.Row="7" Margin="10,0,10,0" Padding="5,5,5,5" Header="Map settings" HorizontalAlignment="Stretch" VerticalAlignment="Top">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="3*"/>
                    <ColumnDefinition Width="2*"/>
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Vertical" Margin="0,0,5,0" Grid.Column="0" >
                    <CheckBox Style="{StaticResource OldStyleCheckBox}" Content="Fast monsters" Margin="0,2,0,2" IsChecked="{Binding FastMonsters, UpdateSourceTrigger=PropertyChanged}" Command="{Binding IsChangedSettings}"/>
                    <CheckBox Style="{StaticResource OldStyleCheckBox}" Content="No monsters" Margin="0,2,0,2" IsChecked="{Binding NoMonsters, UpdateSourceTrigger=PropertyChanged}" Command="{Binding IsChangedSettings}"/>
                    <CheckBox Style="{StaticResource OldStyleCheckBox}" Content="Respawn" Margin="0,2,0,2" IsChecked="{Binding Respawn, UpdateSourceTrigger=PropertyChanged}" Command="{Binding IsChangedSettings}"/>
                    <CheckBox Style="{StaticResource OldStyleCheckBox}" Content="Deathmatch" Margin="0,2,0,2" IsChecked="{Binding Deathmatch, UpdateSourceTrigger=PropertyChanged}" Command="{Binding IsChangedSettings}"/>
                    <CheckBox Style="{StaticResource OldStyleCheckBox}" Content="Altdeathmatch" Margin="0,2,0,2" IsChecked="{Binding AltDeathmatch, UpdateSourceTrigger=PropertyChanged}" Command="{Binding IsChangedSettings}"/>
                    <ComboBox Style="{StaticResource OldStyleComboBox}" ItemsSource="{Binding Skills}" SelectedItem="{Binding SelectedItemSkill}" SelectedIndex="0" Margin="0,2,0,2">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding IsChangedSkill}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ComboBox>
                </StackPanel>
                <ListBox Grid.Column="1" Style="{StaticResource OldStyleListBox}" ItemsSource="{Binding Episodes}" SelectedItem="{Binding SelectedItemEpisode}" SelectedIndex="-1" FontSize="11" Margin="0,0,0,0">
                    <!--<ListBoxItem Content="Select episode" FontSize="11" IsEnabled="False" Foreground="#FF958831"/>-->
                    <!--#aaad71-->
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding IsChangedEpisode}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ListBox>
            </Grid>
        </GroupBox>
        <CheckBox Style="{StaticResource OldStyleCheckBox}" IsChecked="{Binding CheckBoxWarp}" Command="{Binding IsChangedWarp}" x:Name="CheckIsEnabledTextBoxWarp" Grid.Row="8" Margin="10,0,10,0" Content="Warp" VerticalContentAlignment="Top" HorizontalContentAlignment="Left" VerticalAlignment="Center"/>
        <TextBox Grid.Row="9" Style="{StaticResource OldStyleTextBox}" Text="{Binding Warp, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" x:Name="TextBoxWarp" PreviewTextInput="TextBox_PreviewTextInput" VerticalContentAlignment="Center" HorizontalContentAlignment="Left" Height="20" Margin="10,0,10,0" Width="Auto" IsEnabled="{Binding ElementName=CheckIsEnabledTextBoxWarp, Path=IsChecked}" VerticalAlignment="Center" Cursor="IBeam">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="TextChanged">
                    <i:InvokeCommandAction Command="{Binding IsChangedWarp}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </TextBox>
        <Expander Style="{StaticResource OldStyleExpander}" Grid.Row="10" Header="Other settings" Margin="10,0,10,0" Padding="5,5,5,5" HorizontalAlignment="Stretch" VerticalAlignment="Top">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <CheckBox Style="{StaticResource OldStyleCheckBox}" Content="No mouse" Grid.Row="0" Grid.Column="0" Margin="0,2,0,2" IsChecked="{Binding NoMouse, UpdateSourceTrigger=PropertyChanged}" Command="{Binding IsChangedSettings}"/>
                <CheckBox Style="{StaticResource OldStyleCheckBox}" Content="No sound" Grid.Row="1" Grid.Column="0" Margin="0,2,0,2" IsChecked="{Binding NoSound, UpdateSourceTrigger=PropertyChanged}" Command="{Binding IsChangedSettings}"/>
                <CheckBox Style="{StaticResource OldStyleCheckBox}" Content="No sfx" Grid.Row="0" Grid.Column="1" Margin="0,2,0,2" IsChecked="{Binding NoSfx, UpdateSourceTrigger=PropertyChanged}" Command="{Binding IsChangedSettings}"/>
                <CheckBox Style="{StaticResource OldStyleCheckBox}" Content="No music" Grid.Row="1" Grid.Column="1" Margin="0,2,0,2" IsChecked="{Binding NoMusic, UpdateSourceTrigger=PropertyChanged}" Command="{Binding IsChangedSettings}"/>
                <CheckBox Style="{StaticResource OldStyleCheckBox}" Content="No deh" Grid.Row="2" Grid.Column="0" Margin="0,2,0,2" IsChecked="{Binding NoDeh, UpdateSourceTrigger=PropertyChanged}" Command="{Binding IsChangedSettings}"/>
                <CheckBox Style="{StaticResource OldStyleCheckBox}" Content="Solo net" Grid.Row="2" Grid.Column="2" Margin="0,2,0,2" IsChecked="{Binding SoloNet, UpdateSourceTrigger=PropertyChanged}" Command="{Binding IsChangedSettings}"/>
            </Grid>
        </Expander>
        <StackPanel Orientation="Horizontal" Grid.Row="11" Margin="10,0,10,0" HorizontalAlignment="Center" VerticalAlignment="Center">
            <Button Style="{StaticResource OldStyleButton}" Content="Show Command" FontSize="9" Width="73" Height="25" Command="{Binding CheckFullCommandButton}" Visibility="Visible"/>
            <Button x:Name="StartButton" Content="Play" Width="73" Height="25" Command="{Binding PlayDoomFuckYea}">
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource OldStyleButton}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=TextBoxPathToSource, Path=Text.IsEmpty}" Value="True">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=TextBoxPathToWadorDeh, Path=Text.IsEmpty}" Value="True">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </StackPanel>
    </Grid>
</Window>
